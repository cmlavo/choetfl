baseline:
  file_name: "iCHO2291.xml"
  #file_name: "iCHOv1_final.xml"
  biomass_rxn_id: "biomass_cho"
  #biomass_rxn_id: "biomass_cho_prod"
  BBBs_params:
    BBBs: ['protein', 'carbohydrate', 'lipid', 'RNA', 'DNA']
    manual_mass_ratios: # add any manually set mass ratios here as dictionary entries (key = building block, value = mass ratio). This causes the default mass ratio calculation for the given BBB to be skipped.
      carbohydrate: 0.004164738546969
    genmets: # a dictionary of the metabolite IDs for the generic building blocks. Their mass ratios will be calculated from the BBS_subrxns synthesis reactions.
      protein: "prot[c]"
      DNA: 'dna[n]'
      RNA: 'rna[c]'
    subrxns: # if a BBB is listed here, then the stoichiometric coefficients for the constituent metabolites are taken from the corresponding subreaction ID, else the coefficients are taken from the main biomass reaction.
      protein: "PROTsyn"
      RNA: "RNAsyn"
      DNA: "DNAsyn"
    constituent_mets: # dictionary containing dictionaries for each BBB, with (key = metabolite ID in biomass_rxn or in BBBs_subrxns if applicable for stoich coeff, value = equivalent metabolite ID to use for MW calc OR manually set MW float). Often the key and the value will be the same.
      protein: {'alatrna[c]':'ala_L[c]', 'argtrna[c]':'arg_L[c]','asntrna[c]':'asn_L[c]','asptrna[c]':'asp_L[c]', 'cystrna[c]':'cys_L[c]', 'glntrna[c]':'gln_L[c]', 'glutrna[c]':'glu_L[c]', 'glytrna[c]':'gly[c]', 'histrna[c]':'his_L[c]', 'iletrna[c]':'ile_L[c]', 'leutrna[c]':'leu_L[c]', 'lystrna[c]':'lys_L[c]', 'mettrna[c]':'met_L[c]', 'phetrna[c]':'phe_L[c]', 'protrna[c]':'pro_L[c]', 'sertrna[c]':'ser_L[c]', 'thrtrna[c]':'thr_L[c]', 'trptrna[c]':'trp_L[c]', 'tyrtrna[c]':'tyr_L[c]', 'valtrna[c]':'val_L[c]'}
      lipid: {'chsterol[c]':'chsterol[c]', 'clpn_cho[c]':1472.411704, 'pa_cho[c]':707.166282, 'pail_cho[c]':870.314822, 'pchol_cho[c]':794.329702, 'pe_cho[c]':752.249962, 'pglyc_cho[c]':782.252762, 'ps_cho[c]':794.243582, 'sphmyln_cho[c]':733.173557220884, 'tag_cho[c]':897.752705662651, 'xolest2_cho[c]':655.204235220884}
      DNA: {'datp[n]':'datp[n]', 'dctp[n]':'dctp[n]', 'dgtp[n]':'dgtp[n]', 'dttp[n]':'dttp[n]'}
      RNA: {'atp[c]':'atp[c]', 'ctp[c]':'ctp[c]', 'gtp[c]':'gtp[c]', 'utp[c]':'utp[c]'}
    mw_correction: # this value is added to the molar mass of each constituent metabolite in the respective list. Accounts for the initial monomer mass lost from the macromolecule chain from the polymerization reaction (ex: H2O for protein, pyrophosphate for DNA/RNA)
      protein: -18.015
      lipid: 0.0
      RNA: -174.494
      DNA: -174.494
    mass_ratio_normalization: True # if True, the mass ratios of the BBBs are normalized so that their sum is 1
etfl:
  GAM_params: # configuration for growth-associated maintenance operations
    GAM_mets: ['atp[c]', 'adp[c]', 'h[c]', 'h2o[c]', 'pi[c]'] # list of GAM metabolites by ID in the biomass rxn
  enz_coupl_params: # configuration for enzyme coupling
    prot_complx_files: ['cho_prot_complx1.csv', 'cho_prot_complx2.csv'] # list of .csv data files containing the protein complex data to be imported (should be located in data/ folder)
    comp_coeff_mismatch_treatment: 2 # how to treat instances where, for a given product, the two entries for the same product appear where monomer counts differ (this is an error in the data). 0 = take the lowest value, 1 = take the highest value, 2 = take the average, 3 = take the value which appeared first, 4 = take the value which appeared last
  mu_discr:
    mu_bins: 128 # number of bins for the discretization of the growth rate
    mu_min: 0 # minimum growth rate
    mu_max: 0.5 # maximum growth rate
  

solver: "gurobi"
verbose: True